{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","props","good","neutral","bad","total","positivePercentage","FeedbackOptions","onClick","options","map","option","className","s","button","Section","title","children","Notification","message","App","state","handleClick","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Object","keys","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wOAuBeA,EArBI,SAAAC,GAAU,IACnBC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCMSC,EAbS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QACzB,OADgD,EAAdC,QACnBC,KAAI,SAAAC,GAAM,OACvB,wBAAQC,UAAWC,IAAEC,OAAqBN,QAAS,kBAAMA,EAAQG,IAAjE,SACGA,GAD+BA,OCWvBI,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCqDEC,E,4MAjDbC,MAAQ,CACNnB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPkB,YAAc,SAAAX,GACZ,EAAKY,UAAS,SAAAC,GAAS,sBAAQb,EAASa,EAAUb,GAAU,O,EAG9Dc,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBnB,KADiB,EACXC,QADW,EACFC,K,EAIzBsB,gCAAkC,WAAO,IAC/BxB,EAAS,EAAKmB,MAAdnB,KACR,OAAOyB,KAAKC,MAAM1B,GAAQ,IAAM,EAAKuB,wBAA0B,G,uDAGvD,IAAD,EACwBI,KAAKR,MAA5BnB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQwB,KAAKJ,qBACnB,OACE,gCACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CACER,QAASqB,KAAKP,YACdb,QAASqB,OAAOC,KAAKF,KAAKR,WAG9B,cAAC,EAAD,CAASL,MAAM,aAAf,SACGX,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBuB,KAAKH,oCAG3B,cAAC,EAAD,CAAcP,QAAQ,+B,GA1ChBa,aCDlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.b8ba898a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nconst Statistics = props => {\n  const { good, neutral, bad, total, positivePercentage } = props;\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positive feedback: {positivePercentage}%</p>\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onClick, options }) => {\n  return options.map(option => (\n    <button className={s.button} key={option} onClick={() => onClick(option)}>\n      {option}\n    </button>\n  ));\n};\n\nFeedbackOptions.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h2>{title}</h2>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return <p>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = option => {\n    this.setState(prevState => ({ [option]: prevState[option] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round(good * (100 / this.countTotalFeedback())) || 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onClick={this.handleClick}\n            options={Object.keys(this.state)}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2P9Xt\"};"],"sourceRoot":""}