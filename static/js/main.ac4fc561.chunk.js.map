{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["Statistics","props","good","neutral","bad","total","positivePercentage","FeedbackOptions","onClick","options","map","option","className","s","button","id","Section","title","children","Notification","message","BUTTONS_CONFIG","App","state","handleClick","event","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wOAuBeA,EArBI,SAAAC,GAAU,IACnBC,EAAkDD,EAAlDC,KAAMC,EAA4CF,EAA5CE,QAASC,EAAmCH,EAAnCG,IAAKC,EAA8BJ,EAA9BI,MAAOC,EAAuBL,EAAvBK,mBACnC,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,oDAAuBC,EAAvB,W,gBCMSC,EAbS,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QACzB,OADgD,EAAdC,QACnBC,KAAI,SAAAC,GAAM,OACvB,wBAAQC,UAAWC,IAAEC,OAAqBC,GAAIJ,EAAQH,QAASA,EAA/D,SACGG,GAD+BA,OCWvBK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,MCIQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCGPC,EAAiB,CAAC,OAAQ,UAAW,OAoD5BC,E,4MAjDbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPoB,YAAc,SAAAC,GACZ,IAAMV,EAAKU,EAAMC,OAAOX,GACxB,EAAKY,UAAS,SAAAC,GAAS,sBAAQb,EAAKa,EAAUb,GAAM,O,EAGtDc,mBAAqB,WAAO,IAAD,EACM,EAAKN,MACpC,OAFyB,EACjBrB,KADiB,EACXC,QADW,EACFC,K,EAIzB0B,gCAAkC,WAAO,IAC/B5B,EAAS,EAAKqB,MAAdrB,KACR,OAAO6B,KAAKC,MAAM9B,GAAQ,IAAM,EAAK2B,wBAA0B,G,uDAI/D,IAAMxB,EAAQ4B,KAAKJ,qBACnB,OACE,gCACE,cAAC,EAAD,CAASZ,MAAM,wBAAf,SACE,cAAC,EAAD,CACET,QAASyB,KAAKT,YACdf,QAASY,MAGb,cAAC,EAAD,CAASJ,MAAM,aAAf,SACGZ,EACC,cAAC,EAAD,CACEH,KAAM+B,KAAKV,MAAMrB,KACjBC,QAAS8B,KAAKV,MAAMpB,QACpBC,IAAK6B,KAAKV,MAAMnB,IAChBC,MAAOA,EACPC,mBAAoB2B,KAAKH,oCAG3B,cAAC,EAAD,CAAcV,QAAQ,+B,GA1ChBc,aCHlBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCJjDC,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.ac4fc561.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = props => {\r\n  const { good, neutral, bad, total, positivePercentage } = props;\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ onClick, options }) => {\r\n  return options.map(option => (\r\n    <button className={s.button} key={option} id={option} onClick={onClick}>\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\nimport Statistics from './Statistics/Statistics';\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions';\nimport Section from './Section/Section';\nimport Notification from './Notification/Notification';\n\nconst BUTTONS_CONFIG = ['good', 'neutral', 'bad'];\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = event => {\n    const id = event.target.id;\n    this.setState(prevState => ({ [id]: prevState[id] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    return Math.round(good * (100 / this.countTotalFeedback())) || 0;\n  };\n\n  render() {\n    const total = this.countTotalFeedback();\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            onClick={this.handleClick}\n            options={BUTTONS_CONFIG}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2P9Xt\"};"],"sourceRoot":""}